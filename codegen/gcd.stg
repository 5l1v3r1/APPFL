--GCD of unboxed ints
--gcdNew# :: Int# -> Int# -> Int#
gcdNew# = FUN(x# y# -> case ilt# x# y# of {
	  	            0 -> case y# of {
			       	       0 -> x#;
				       z# -> case imod# x# y# of {r# -> gcdNew# y# r#}};
		            d# -> gcdNew# y# x#});

--GCD of boxed ints
--gcdNew :: Int -> Int -> Int
gcdNew = FUN(x y -> case x of {
       	       	    	 I x# -> case y of {
			      	      I y# -> case gcdNew# x# y# of {
				      	      	   r# -> int r#}}});

--Test
result = CON(I 3);
output = THUNK(gcdNew six nine);
main = THUNK(eqInt result output);