fac = FUN(i ->
  case i of {
    I i# ->
      case# eqInt# i# 0# of      -- returning boxed True
        True -> let {res = CON(I 1#)} in res
        x -> case# sub# i# 1# of
               im1# -> let { im1 = CON(I im1#) } in
                         case fac im1 of
                           f1 -> mul i f1

fac# = FUN(i# ->
  case# eqInt# i# 0# of           -- returning True#
    True# -> 1#                   -- assume matching on unboxed constants
    x     -> case# sub# i# 1# of
               im1# -> case# fac# im1# of
                         f1# -> mult# i# f1#

