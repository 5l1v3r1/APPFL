--creates array of specified size with odd numbers in the usual order
--[1,3,5,7,9,...,2n-1,nil]
--createArray :: Int -> List Int -> List Int
createArray = FUN(n xs -> let {a = THUNK(eqInt n zero)} in case a of {
	      	    	                                        True -> xs;
								False -> let {e = THUNK(multInt n two);
								      	      f = THUNK(subInt e one);
                                                                              b = CON(Cons f xs);
								              d = THUNK(subInt n one);
									      c = THUNK(createArray d b)} in c});

--initializes array creation
--cArr :: Int -> List Int
cArr = FUN(n -> let {a = THUNK(createArray n nil)} in a);  

list1 = CON(Cons five nil);
list2 = CON(Cons three list1);
list3 = CON(Cons one list2);

--Test
output = THUNK(cArr three);
main = THUNK(eqList list3 output);
