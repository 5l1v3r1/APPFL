--determines if two ints are relatively prime
--relPrime :: Int -> Int -> Bool
relPrime = FUN(x y ->
                   let {
                     a = THUNK(gcdNew x y);
                     b = THUNK(eqInt a one)}
                   in case b of
                        _scrt0 {
                          True -> true;
                          False -> false });

--test
main = THUNK(relPrime seven six);

--GCD of unboxed ints
--gcdNew# :: Int# -> Int# -> Int#
gcdNew# = FUN(x# y# ->
                      case ilt# x# y# of
                        _scrt3 {
                          0 -> case y# of
                                 _scrt2 {
                                   0 -> x#;
                                   z# -> case imod# x# y# of
                                           _scrt1 {
                                             r# -> gcdNew# y# r# } };
                          d# -> gcdNew# y# x# });

--GCD of boxed ints
--gcdNew :: Int -> Int -> Int
gcdNew = FUN(x y ->
                 case x of
                   _scrt6 {
                     I x# -> case y of
                               _scrt5 {
                                 I y# -> case gcdNew# x# y# of
                                           _scrt4 {
                                             r# -> int r# } } });

