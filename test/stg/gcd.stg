--GCD of unboxed ints
--gcdNew# :: Int# -> Int# -> Int#
gcdNew# = FUN(x# y# ->
                      case ilt# x# y# of
                        _scrt2 {
                          0 -> case y# of
                                 _scrt1 {
                                   0 -> x#;
                                   z# -> case imod# x# y# of
                                           _scrt0 {
                                             r# -> gcdNew# y# r# } };
                          d# -> gcdNew# y# x# });

--GCD of boxed ints
--gcdNew :: Int -> Int -> Int
gcdNew = FUN(x y ->
                 case x of
                   _scrt5 {
                     I x# -> case y of
                               _scrt4 {
                                 I y# -> case gcdNew# x# y# of
                                           _scrt3 {
                                             r# -> int r# } } });

--Test
result = CON(I 3);

output = THUNK(gcdNew six nine);

main = THUNK(eqInt result output);

