! not working #eq intToBool#
one = CON(I 1);
five = CON(I 5);

take = FUN(n xs ->
   case eqInt n zero of
      { True -> nil;
        False -> case xs of
                 { Nil -> nil;
                   Cons hd tl -> let { m = THUNK(subInt n one);
                                       rec = THUNK(take m tl);
                                       result = CON(Cons hd rec) } in result }});
eqInt = FUN(x y ->
           case x of
              { I i ->
                  case y of
                     { I j -> case eq# i j of
                                 { x -> intToBool# x }}});

subInt = FUN(x y ->
           case x of
              { I i ->
                  case y of
                     { I j -> case sub# i j of
                                 { x -> let { result = CON (I x) } in result }}});

ones = CON(Cons one ones);
main = THUNK(take five ones);

